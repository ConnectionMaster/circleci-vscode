{
  "name": "circleci-vscode",
  "displayName": "CircleCI",
  "description": "Monitor, inspect, run, and cancel Pipeline Builds on CircleCI",
  "version": "0.1.5",
  "license": "MIT",
  "publisher": "jodyh",
  "keywords": [
    "continuous integration",
    "circle ci",
    "CI/CD"
  ],
  "galleryBanner": {
    "color": "#161616",
    "theme": "dark"
  },
  "preview": true,
  "icon": "out/assets/logo.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/jodyheavener/circleci-vscode.git"
  },
  "homepage": "https://github.com/jodyheavener/circleci-vscode",
  "main": "./out/extension.js",
  "engines": {
    "vscode": "^1.44.0"
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "compile": "webpack --mode development",
    "lint": "tslint -p ./",
    "watch": "webpack --mode development --watch"
  },
  "dependencies": {
    "circleci": "^0.3.3",
    "follow-redirects": "^1.11.0",
    "git-branch": "^2.0.1",
    "git-repo-name": "^1.0.1",
    "git-username": "^1.0.0",
    "open": "^7.0.3"
  },
  "devDependencies": {
    "@types/follow-redirects": "^1.8.0",
    "@types/git-branch": "^2.0.1",
    "@types/git-repo-name": "^1.0.0",
    "@types/git-username": "^1.0.0",
    "@types/node": "^13.13.5",
    "@types/vscode": "^1.44.0",
    "clean-webpack-plugin": "^3.0.0",
    "copy-webpack-plugin": "^6.0.1",
    "file-loader": "^6.0.0",
    "ts-loader": "^7.0.4",
    "tslint": "^6.1.2",
    "typescript": "^3.8.3",
    "webpack": "^4.43.0",
    "webpack-cli": "^3.3.11"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onView:circleciPipeline",
    "workspaceContains:circle.yaml",
    "workspaceContains:circle.yml",
    "workspaceContains:.circleci/config.yaml",
    "workspaceContains:.circleci/config.yml",
    "onCommand:circleci.refreshAll",
    "onCommand:circleci.refresh",
    "onCommand:circleci.openPage",
    "onCommand:circleci.retryBuild",
    "onCommand:circleci.copyBuildNumber",
    "onCommand:circleci.copyCommitHash",
    "onCommand:circleci.copyWorkflowId",
    "onCommand:circleci.fetchArtifacts",
    "onCommand:circleci.downloadArtifact"
  ],
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "circleciContainer",
          "title": "CircleCI",
          "icon": "./out/assets/icon-logo.svg"
        }
      ]
    },
    "views": {
      "circleciContainer": [
        {
          "id": "circleciPipeline",
          "name": "Pipelines"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "circleci.refreshAll",
          "when": "view == circleciPipeline"
        },
        {
          "command": "circleci.openPipelinesPage",
          "when": "view == circleciPipeline"
        }
      ],
      "view/item/context": [
        {
          "when": "viewItem == circleciPipeline",
          "command": "circleci.remove",
          "group": "circleci"
        },
        {
          "when": "viewItem == circleciPipeline || viewItem == circleciBuild",
          "command": "circleci.refresh",
          "group": "circleci"
        },
        {
          "when": "viewItem == circleciPipeline || viewItem == circleciBuild",
          "command": "circleci.openPage",
          "group": "circleci"
        },
        {
          "when": "viewItem == circleciBuild",
          "command": "circleci.retryBuild",
          "group": "circleci"
        },
        {
          "when": "viewItem == circleciBuild",
          "command": "circleci.cancelBuild",
          "group": "circleci"
        },
        {
          "when": "viewItem == circleciBuild",
          "command": "circleci.copyBuildNumber",
          "group": "circleci"
        },
        {
          "when": "viewItem == circleciBuildCommit",
          "command": "circleci.copyCommitHash",
          "group": "circleci"
        },
        {
          "when": "viewItem == circleciBuildWorkflow",
          "command": "circleci.copyWorkflowId",
          "group": "circleci"
        }
      ]
    },
    "commands": [
      {
        "command": "circleci.refreshAll",
        "title": "Refresh Pipelines"
      },
      {
        "command": "circleci.openPipelinesPage",
        "title": "Open Pipelines in browser"
      },
      {
        "command": "circleci.remove",
        "title": "Remove",
        "category": "circleci"
      },
      {
        "command": "circleci.refresh",
        "title": "Refresh",
        "category": "circleci"
      },
      {
        "command": "circleci.openPage",
        "title": "Open in browser",
        "category": "circleci"
      },
      {
        "command": "circleci.cancelBuild",
        "title": "Cancel build",
        "category": "circleci"
      },
      {
        "command": "circleci.retryBuild",
        "title": "Retry build",
        "category": "circleci"
      },
      {
        "command": "circleci.copyBuildNumber",
        "title": "Copy build number",
        "category": "circleci"
      },
      {
        "command": "circleci.copyCommitHash",
        "title": "Copy commit hash",
        "category": "circleci"
      },
      {
        "command": "circleci.copyWorkflowId",
        "title": "Copy workflow ID",
        "category": "circleci"
      },
      {
        "command": "circleci.buildFetchArtifacts",
        "title": "Fetch artifacts",
        "category": "circleci"
      },
      {
        "command": "circleci.downloadArtifact",
        "title": "Download artifact",
        "category": "circleci"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "CircleCI",
      "properties": {
        "circleci.apiToken": {
          "type": "string",
          "default": null,
          "markdownDescription": "A CircleCI API Token. This can be generated on your [Personal API Tokens page](https://app.circleci.com/settings/user/tokens)."
        },
        "circleci.customBranches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "master"
          ],
          "description": "Add any custom branches you'd like to list builds for."
        },
        "circleci.pipelineRefreshInterval": {
          "type": "number",
          "default": 300,
          "minimum": 0,
          "markdownDescription": "The number of seconds to wait before refreshing all **inactive** pipelines. Set to `0` to disable."
        },
        "circleci.buildCount": {
          "type": "number",
          "default": 10,
          "minimum": 0,
          "maximum": 30,
          "description": "The number of builds to retrieve in a pipeline."
        },
        "circleci.buildRefreshInterval": {
          "type": "number",
          "default": 10,
          "minimum": 0,
          "markdownDescription": "The number of seconds to wait before refreshing an active build's status. Set to `0` to disable."
        }
      }
    }
  }
}
